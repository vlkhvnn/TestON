package wikimedia

import (
	"encoding/json"
	"log"
	"strings"

	"github.com/r3labs/sse/v2"
	"github.com/vlkhvnn/TestON/internal/models"
	"github.com/vlkhvnn/TestON/internal/store"
)

// StartStream connects to the Wikimedia SSE stream and processes events.
func StartStream(eventStore *store.Store) {
	client := sse.NewClient("https://stream.wikimedia.org/v2/stream/recentchange")
	err := client.SubscribeRaw(func(msg *sse.Event) {
		var event models.RecentChangeEvent
		if err := json.Unmarshal(msg.Data, &event); err != nil {
			log.Printf("Error unmarshalling event: %v", err)
			return
		}

		// Skip events generated by bots.
		if event.Bot {
			return
		}

		// Extract language code from ServerName (e.g., "en.wikipedia.org" â†’ "en").
		parts := strings.Split(event.ServerName, ".")
		if len(parts) < 1 {
			return
		}
		lang := parts[0]

		// Store the event.
		eventStore.AddEvent(lang, event)
		log.Printf("Stored event for [%s]: %s by %s", lang, event.Title, event.User)
	})
	if err != nil {
		log.Fatalf("Error subscribing to Wikimedia stream: %v", err)
	}
}
